# This file tells Render how to build and deploy your services.
# It defines both your backend API and your frontend UI.

services:
  # ====== Service 1: The Spring Boot Backend API ======
  - type: web
    name: resume-screener-api # You can change this name
    runtime: java
    plan: free 
    autoDeploy: true 
    region: ohio 
    
    buildCommand: "./mvnw clean install"
    # IMPORTANT: Make sure this JAR name matches your pom.xml <artifactId> and <version>
    startCommand: "java -jar target/gemini-0.0.1-SNAPSHOT.jar" 
    
    envVars:
      - key: SERVER_PORT
        value: 8080 # Render will map its internal port to this
      - key: SPRING_DATA_MONGODB_URI
        fromSecretFile:
          name: backend-secrets
          key: MONGO_DB_URI
      - key: GROQ_API_KEY
        fromSecretFile:
          name: backend-secrets
          key: GROQ_API_KEY
      - key: GROQ_API_URL
        value: https://api.groq.com/openai/v1/chat/completions
      - key: SPRING_APPLICATION_NAME
        value: resumescreener

  # ====== Service 2: The React Frontend Static Site ======
  - type: static site # <-- CORRECTED: "static site" with a space
    name: resume-screener-ui # You can change this name
    # The GitHub repository for your frontend code
    repo: https://github.com/DevalacheruvuManasa/AI-Resume-Screener-Frontend # This must be YOUR frontend repo URL
    plan: free
    autoDeploy: true
    region: ohio
    
    # Build and Publish settings for a Vite/React app
    buildCommand: "npm install && npm run build"
    publishDir: "dist"
    
    # The rewrite rule to proxy API calls to our backend service
    routes:
      - type: rewrite
        source: /api/:path*
        # This destination points to the full URL of the backend service defined above.
        # Render automatically makes the backend available to the frontend.
        destination: https://resume-screener-api.onrender.com/api/:path*